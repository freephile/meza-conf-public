---
list:
#
# Extensions loaded with wfLoadExtension()
#
- name: AJAXPoll
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/AJAXPoll.git
  version: "{{ mediawiki_default_branch }}"
- name: AntiSpoof
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/AntiSpoof.git
  version: "{{ mediawiki_default_branch }}"
  composer_merge: True

# This is either old, or a plugin. Check documentation for CentralAuth
# - name: AntiSpoofForCentralAuth
#   repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/AntiSpoofForCentralAuth.git
#   version: "{{ mediawiki_default_branch }}"
- name: CategoryTree
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/CategoryTree.git
  # CategoryTree didn't convert to extension registration until 1_28
  version: "{{ mediawiki_default_branch }}"
  config: |
    //    maximum number of children shown in a tree node. Default is 200.
    $wgCategoryTreeMaxChildren = 200;
    //    enable <categorytree> tag. Default is true.
    $wgCategoryTreeAllowTag = TRUE;
    //    loads the first level of the tree in a <categorytree> dynamically. This way, the cache does not need to be disabled. Default is false.
    $wgCategoryTreeDynamicTag = TRUE;
    //    disables the parser cache for pages with a <categorytree> tag. Default is true.
    $wgCategoryTreeDisableCache = FALSE;
    //    enable HTTP cache for anon users. Default is false.
    $wgCategoryTreeHTTPCache = TRUE;
    //    do not show the namespace name for pages and categories. Default is false, namespaces are shown unless showing categories only. Deprecated as of rev:36864, July 2008: use $wgCategoryTreeDefaultOptions['hideprefix'] instead.
    $wgCategoryTreeDefaultOptions['hideprefix'] =TRUE; // $wgCategoryTreeOmitNamespace
    //    an array defining the maximum depth for each mode, to which the tree may be expanded initially using the depth parameterin a <category> tag. Per default, this is set to 2 for the "categories" mode, and 1 for other modes. To set it to 3 for categories and 2 for other modes, for example, you can use $wgCategoryTreeMaxDepth = array(CT_MODE_PAGES => 2, CT_MODE_ALL => 2, CT_MODE_CATEGORIES => 3);.
    $wgCategoryTreeMaxDepth= array(CT_MODE_PAGES => 2, CT_MODE_ALL => 2, CT_MODE_CATEGORIES => 3);
    //    the default mode to use when no mode attribute is specified in a <categorytree> tag. May be CT_MODE_CATEGORIES (the default), CT_MODE_PAGES, or CT_MODE_ALL.
    $wgCategoryTreeDefaultMode = CT_MODE_ALL;
    //    the mode to use when rendering trees on category pages. Deprecated as of rev:36864, July 2008: use $wgCategoryTreeCategoryPageOptions['mode'] instead.
    $wgCategoryTreeCategoryPageOptions['mode'] = CT_MODE_ALL; // $wgCategoryTreeCategoryPageMode
    //    if true, forces the scripts needed by CategoryTree on every page, instead of on-demand. This may be needed if a CategoryTree is embedded in an unusualy way, for example in a custom skin or in a system message (since rev:36888, July 2008).
    // NOT WORKING in freephile skin $wgCategoryTreeSidebarRoot = 'People';
    //    root category to use for integrating the category tree in the sidebar (since rev:36920, July 2008). If not set, no tree is integrated (this is the default). Integrating a CategoryTree into the sidebar only works with skins based upon SkinTemplate,that is, Modern, Monobook, Chick, Simple, and MySkin, but not Standard, Nostalgia or CologneBlue.
    $wgCategoryTreeForceHeaders = TRUE;
    //    default options to apply, as an array (since rev:36864, July 2008). The avialable options are described above.
    $wgCategoryTreeDefaultOptions = array();
    //    options to use on category pages, as an array (since rev:36864, July 2008).
    $wgCategoryTreeCategoryPageOptions = array();
    //    options to use on Special:CategoryTree, as an array (since rev:36864, July 2008).
    $wgCategoryTreeSpecialPageOptions = array();
    //    options to use when showing the tree in the sidebar, as an array (since rev:36920, July 2008).
    $wgCategoryTreeSidebarOptions = array();

# - name: CentralAuth
#   repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/CentralAuth.git
#   version: "{{ mediawiki_default_branch }}"

- name: CheckUser
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/CheckUser.git
  version: "{{ mediawiki_default_branch }}"
- name: ConfirmEdit
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/ConfirmEdit.git
  version: "{{ mediawiki_default_branch }}"
- name: Gadgets
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/Gadgets.git
  version: "{{ mediawiki_default_branch }}"
- name: MobileFrontend
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/MobileFrontend.git
  version: "{{ mediawiki_default_branch }}"
  config: |
    $wgMFAutodetectMobileView = true;
    $wgMFDefaultSkinClass = 'SkinMinerva'; 
- name: MsUpload
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/MsUpload.git
  version: "{{ mediawiki_default_branch }}"
  config: |
    $wgMSU_showAutoCat = true; // If true, files uploaded while editing a category will be added to that category
    $wgMSU_checkAutoCat = true; // Whether the checkbox for the above mentioned case is checked by default
    $wgMSU_imgParams = '400px'; // The default parameters for inserted images
    $wgMSU_useDragDrop = true; // Should the drag & drop area be shown?
    $wgMSU_useMsLinks = false; // Should we allow to insert links in the style of the Extension:MsLinks?
- name: Nuke
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/Nuke.git
  version: "{{ mediawiki_default_branch }}"
- name: Renameuser
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/Renameuser.git
  version: "{{ mediawiki_default_branch }}"

#
# Extensions loaded with legacy require_once method
#
## AntiBot is archived
#- name: AntiBot
#  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/AntiBot.git
#  version: master
#  legacy_load: True
- name: ConfirmAccount
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/ConfirmAccount.git
  version: "{{ mediawiki_default_branch }}"
  legacy_load: True
  config: |
    $wgHooks['PersonalUrls'][] = 'onPersonalUrls';
    
    function onPersonalUrls( array &$personal_urls, Title $title, SkinTemplate $skin  ) {
        // Add a link to Special:RequestAccount if a link exists for login
        if ( isset( $personal_urls['login'] ) || isset( $personal_urls['anonlogin'] ) ) {
                $personal_urls['createaccount'] = array(
                    'text' => wfMessage( 'requestaccount' )->text(),
                    'href' => SpecialPage::getTitleFor( 'RequestAccount' )->getFullURL()
                );
        }
        return true;
    }
    
    // $wgConfirmAccountContact = 'webmaster@example.com'; // any SINGLE email address 
    // OR, by setting the confirmaccount-notify permission on a group, all members of that group
    // will receive notifications.  Could be a custom group, 
    // but in this case we're using the 'Administrators' group (sysop)
    // NOTE: Admins who do not wish to receive notices can turn off the 'Enable email from other users' 
    // option in Special:Preferences (but would prevent them from all user messages)
    $wgGroupPermissions['sysop']['confirmaccount-notify'] = true;
    
    $wgMakeUserPageFromBio = true;
    $wgAutoWelcomeNewUsers = false;
    $wgConfirmAccountRequestFormItems = array(
        'UserName'        => array( 'enabled' => true ),
        'RealName'        => array( 'enabled' => true ),
        'Biography'       => array( 'enabled' => true, 'minWords' => 20 ),
        'AreasOfInterest' => array( 'enabled' => true ),
        'CV'              => array( 'enabled' => true ),
        'Notes'           => array( 'enabled' => true ),
        'Links'           => array( 'enabled' => true ),
        'TermsOfService'  => array( 'enabled' => true ),
     );
    // the default is 6 words for Bio. 
    // You can ovveride settings indivually like so
    // $wgConfirmAccountRequestFormItems['Biography']['minWords'] = 10;  

- name: CreateRedirect
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/CreateRedirect.git
  version: "{{ mediawiki_default_branch }}"

# possible widget? or just don't do it? or download the code manually
# - name: FollowButton
#   https://www.mediawiki.org/wiki/Extension:FollowButton

- name: Loops
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/Loops.git
  version: "{{ mediawiki_default_branch }}"
  config: |
    // ExtLoops::$maxLoops = 5000;
- name: MagicNoCache
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/MagicNoCache.git
  version: "{{ mediawiki_default_branch }}"
  legacy_load: True
- name: MyVariables
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/MyVariables.git
  version: "{{ mediawiki_default_branch }}"
  legacy_load: True
# unmaintained. May be problematic
- name: NoTitle
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/NoTitle.git
  version: "{{ mediawiki_default_branch }}"
  legacy_load: True
- name: OpenGraphMeta
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/OpenGraphMeta.git
  version: "{{ mediawiki_default_branch }}"
  legacy_load: True
#- name: SimpleFarm
#  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/SimpleFarm
#  version: "{{ mediawiki_default_branch }}"
#  legacy_load: True
- name: Widgets
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/Widgets.git
  version: "{{ mediawiki_default_branch }}"
  legacy_load: True
  # this module requires a git submodule update --init; thus the next line
  git_submodules: True

#
# libraries loaded by composer
#
- name: DataValues
  #repo: https://github.com/DataValues/DataValues.git
  composer: "data-values/data-values"
  version: "~1.0"
- name: DataValuesCommon
  composer: "data-values/common"
  version: "0.3.*"
- name: DataValuesGeo
  composer: "data-values/geo"
  version: "~3.0"
- name: DataValuesInterfaces
  composer: "data-values/interfaces"
  version: "0.2.*"
- name: DataValuesTime
  composer: "data-values/time"
  version: "0.8.*"
- name: DataValuesValidators
  composer: "data-values/validators"
  version: "0.1.*"
- name: ParserHooks
  composer: mediawiki/parser-hooks
  version: "~1.5"
- name: WikiSEO
  # repo: https://github.com/tinymighty/wiki-seo.git WikiSEO
  composer: tinymighty/wiki-seo
  version: "~1.2"


### Added for freephile

## This content was produced with
## php /opt/meza/src/scripts/importExtensions.php https://freephile.org/w/api.php

# Here are the extensions in core
# AdminLinks
# ApprovedRevs
# Arrays
# BatchUserRights
# CharInsert
# CirrusSearch
# Cite
# CollapsibleVector
# ContributionScores
# CopyWatchers
# DataTransfer
# DismissableSiteNotice
# DisplayTitle
# Echo
# Elastica
# ExternalData
# HeaderFooter
# HeaderTabs
# ImageMap
# ImagesLoaded
# InputBox
# Interwiki
# LabeledSectionTransclusion
# Maps
# MasonryMainPage
# NumerAlpha
# PageForms
# PageImporter
# ParserFunctionHelper
# ParserFunctions
# PipeEscape
# ReplaceText
# SemanticCompoundQueries
# SemanticDrilldown
# SemanticInternalObjects
# Semantic
# SemanticMeetingMinutes
# Semantic
# SimpleMathJax
# StringFunctionsEscaped
# SubPageList
# SyntaxHighlight_GeSHi
# TalkRight
# Thanks
# UniversalLanguageSelector
# UploadWizard
# Variables
# VisualEditor
# WatchAnalytics
# WhoIsWatching
# WikiEditor
# Wiretap
# YouTube

#  Here are additional extensions from MezaLocalExtensions.yml
# AJAXPoll
# AntiBot
# AntiSpoof
# AntiSpoofForCentralAuth
# CategoryTree
# CentralAuth
# CheckUser
# ConfirmEdit
# CreateRedirect
# DataValues
# DataValuesCommon
# DataValuesGeo
# DataValuesInterfaces
# DataValuesTime
# DataValuesValidators
# FollowButton
# Gadgets
# Loops
# MagicNoCache
# MobileFrontend
# MsUpload
# MyVariables
# NoTitle
# Nuke
# OpenGraphMeta
# ParserHooks
# Renameuser
# Widgets
# WikiSEO

- name: BetaFeatures
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/BetaFeatures
  version: "{{ mediawiki_default_branch }}"

# Bootstrap is installed by composer
# extra rules that I didn't have before, but enable all Bootstrap features
- name: Bootstrap
  composer: "mediawiki/bootstrap"
  version: ~1.0
  config: |
    // This will load the Bootstrap modules sitewide
    $wgHooks['SetupAfterCache'][]=function(){
        \Bootstrap\BootstrapManager::getInstance()->addAllBootstrapModules();
        return true;
    };
    // This will load all Bootstrap styles and scripts sitewide
    // Temporarily turning this off because the 'styles' reduces <body> font-size to 14px instead of 16px
    /**
    $wgHooks['ParserAfterParse'][]=function( Parser &$parser, &$text, StripState &$stripState ){
        $parser->getOutput()->addModuleStyles( 'ext.bootstrap.styles' );
        $parser->getOutput()->addModuleScripts( 'ext.bootstrap.scripts' );
        return true;
    };
    */

- name: CSS
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/CSS.git
  version: "{{ mediawiki_default_branch }}"
- name: CategorySuggest
  repo: https://github.com/middlebury/CategorySuggest.git
  version: tags/CategorySuggest-1.8
  legacy_load: True
- name: WikiCategoryTagCloud
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/WikiCategoryTagCloud
  version: "{{ mediawiki_default_branch }}"
- name: CiteThisPage
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/CiteThisPage.git
  version: "{{ mediawiki_default_branch }}"
# The Collection extension should work in an SSL environment, with External
# render service.  @FIXME review the status and setup
- name: Collection
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/Collection.git
  version: "{{ mediawiki_default_branch }}"
  legacy_load: True
  config: |
    // New configuration of Collection
    // $wgCollectionPODPartners = false; # to disable print on demand
    $wgCollectionPODPartners = array(
        'pediapress' => array(
            'name' => 'PediaPress',
            'url' => 'https://pediapress.com/',
            'posturl' => 'https://pediapress.com/api/collections/',
            'infopagetitle' => 'coll-order_info_article',
        ),
    );

    $wgCollectionMWServeURL = "http://tools.pediapress.com/mw-serve/";

    // mw-render --list-writers will show what's availabe locally
    $wgCollectionFormats = array(
        'rl' => 'PDF', # enabled by default
        'odf' => 'ODT',
    //    'docbook' => 'DocBook XML',
        'xhtml' => 'XHTML 1.0 Transitional',
        'epub' => 'e-book (EPUB)',
        'zim' => 'Kiwix (OpenZIM)',
    );
    // add in permissions for saving collections
    $wgGroupPermissions['user']['collectionsaveasuserpage'] = true;
    $wgGroupPermissions['sysop']['collectionsaveascommunitypage'] = true;

- name: EmbedVideo
  repo: https://github.com/HydraWiki/mediawiki-embedvideo.git
  version: master
# Add to pre-LocalSettings.php
# $wgNamespacesWithSubpages[NS_MAIN] = true;
#- name: Html2Wiki
#  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/Html2Wiki.git
#  version: master
#  composer_merge: True

- name: Mermaid
  composer: "mediawiki/mermaid"
  version: ~2.1
  config: |
    wfLoadExtension( 'Mermaid' );
    $mermaidgDefaultTheme = 'neutral';

- name: PageSchemas
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/PageSchemas
  version: master
  legacy_load: True
  config: |
    // $wgGroupPermissions['sysop']['generatepages'] = true; // default

- name: PdfHandler
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/PdfHandler
  version: "{{ mediawiki_default_branch }}"

- name: Poem
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/Poem
  version: "{{ mediawiki_default_branch }}"

#- name: RelatedArticles
#  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/RelatedArticles.git
#  version: "{{ mediawiki_default_branch }}"
#  config: |
#    $wgRelatedArticlesFooterWhitelistedSkins = ['vector','chameleon','foreground','modern','cologneblue','monobook'];
#    $wgRelatedArticlesUseCirrusSearch = true;
#    $wgRelatedArticlesLoggingSamplingRate = 1;
#    $wgRelatedArticlesShowReadMore = true;
#    $wgRelatedArticlesShowInFooter = true;

- name: SVGEdit
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/SVGEdit
  version: "{{ mediawiki_default_branch }}"
  legacy_load: True
  config: |
    $wgSVGEditEditor = "$wgScriptPath/extensions/SVGEdit/svg-edit/svg-editor.html";
- name: Scribunto
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/Scribunto
  version: "{{ mediawiki_default_branch }}"
  config: |
    $wgScribuntoDefaultEngine = 'luastandalone';
    $wgScribuntoUseGeSHi = true;
#- name: TogetherJS
#  repo: // require_once("$IP/extensions/TogetherJS/TogetherJS.php");
#  version: master
#  legacy_load: True

- name: UserMerge
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/UserMerge.git
  version: "{{ mediawiki_default_branch }}"
  config: |
    // By default nobody can use this function, enable for bureaucrat?
    $wgGroupPermissions['bureaucrat']['usermerge'] = true;
- name: WebChat
  repo: https://gerrit.wikimedia.org/r/mediawiki/extensions/WebChat
  version: "{{ mediawiki_default_branch }}"
  legacy_load: True
  config: |
    // IRC Server to connect to, not required when using the freenodeChat web client.
    $wgWebChatServer  = '';
    // Channel to connect to.
    $wgWebChatChannel = '#qualitybox';
    // Which web chat client to use, 'freenodeChat' is required when connecting to freenode,
    // but 'Mibbit' can be used for other networks.
    $wgWebChatClient = 'freenodeChat';
